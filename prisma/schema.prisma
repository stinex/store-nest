generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  email      String  @unique
  password   String
  firstName  String  @map("first_name")
  lastName   String  @map("last_name")
  avatarPath String  @default("/uploads/default-avatar.png") @map("avatar_path")
  phone      String? @default("")

  orders    Order[]
  reviews   Review[]
  favorites Product[]
}

model Product {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name        String
  slug        String @unique
  description String
  prices      String
  images      String

  orderItem OrderItem[]
  reviews   Review[]

  category   Category? @relation(fields: [categoryId], references: [id])
  categoryId Int?      @map("category_id")
  user       User?     @relation(fields: [userId], references: [id])
  userId     Int?      @map("user_id")
}

model Order {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  status EnumOderItemStatus @default(PENDING)
  items  OrderItem[]

  user   User? @relation(fields: [userId], references: [id])
  userId Int?  @map("user_id")
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  quantity Int
  price    Int

  order   Order? @relation(fields: [orderId], references: [id])
  orderId Int?   @map("order_id")

  product   Product? @relation(fields: [productId], references: [id])
  productId Int?     @map("product_id")
}

model Category {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  slug     String    @unique
  name     String    @unique
  products Product[]
}

model Review {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  rating Int
  text   String

  user      User?    @relation(fields: [userId], references: [id])
  userId    Int?     @map("user_id")
  product   Product? @relation(fields: [productId], references: [id])
  productId Int?     @map("product_id")
}

enum EnumOderItemStatus {
  PENDING
  PAYED
  SHIPPED
  DELIVERED
}
